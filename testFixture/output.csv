Node Type,Attributes,Inferred Type,Parent Node Type,Parent Attributes
Module,"name: code-3, lineno: 0, col_offset: 0",code-3,None,None
Assign,"value: 10, lineno: 2, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
AssignName,"name: x, lineno: 2, col_offset: 0",int,Assign,"value: 10, lineno: 2, col_offset: 0"
Const,"name: int, value: 10, lineno: 2, col_offset: 4",int,Assign,"value: 10, lineno: 2, col_offset: 0"
Assign,"value: 2, lineno: 3, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
AssignName,"name: y, lineno: 3, col_offset: 0",int,Assign,"value: 2, lineno: 3, col_offset: 0"
Const,"name: int, value: 2, lineno: 3, col_offset: 4",int,Assign,"value: 2, lineno: 3, col_offset: 0"
Assign,"value: (BinOp), lineno: 4, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
AssignName,"name: z, lineno: 4, col_offset: 0",float,Assign,"value: (BinOp), lineno: 4, col_offset: 0"
BinOp,"op: /, lineno: 4, col_offset: 4",float,Assign,"value: (BinOp), lineno: 4, col_offset: 0"
Name,"name: x, lineno: 4, col_offset: 4",int,BinOp,"op: /, lineno: 4, col_offset: 4"
Name,"name: y, lineno: 4, col_offset: 8",int,BinOp,"op: /, lineno: 4, col_offset: 4"
Expr,"value: (Call), lineno: 5, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
Call,"lineno: 5, col_offset: 0",InferenceError,Expr,"value: (Call), lineno: 5, col_offset: 0"
Name,"name: print, lineno: 5, col_offset: 0",print,Call,"lineno: 5, col_offset: 0"
Name,"name: z, lineno: 5, col_offset: 6",float,Call,"lineno: 5, col_offset: 0"
FunctionDef,"name: add, lineno: 7, col_offset: 0",add,Module,"name: code-3, lineno: 0, col_offset: 0"
Arguments,"lineno: None, col_offset: None",InferenceError,FunctionDef,"name: add, lineno: 7, col_offset: 0"
AssignName,"name: a, lineno: 7, col_offset: 8",Unknown,Arguments,"lineno: None, col_offset: None"
AssignName,"name: b, lineno: 7, col_offset: 11",Unknown,Arguments,"lineno: None, col_offset: None"
Return,"value: (BinOp), lineno: 8, col_offset: 4",InferenceError,FunctionDef,"name: add, lineno: 7, col_offset: 0"
BinOp,"op: +, lineno: 8, col_offset: 11",Unknown,Return,"value: (BinOp), lineno: 8, col_offset: 4"
Name,"name: a, lineno: 8, col_offset: 11",Unknown,BinOp,"op: +, lineno: 8, col_offset: 11"
Name,"name: b, lineno: 8, col_offset: 15",Unknown,BinOp,"op: +, lineno: 8, col_offset: 11"
Assign,"value: (Call), lineno: 10, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
AssignName,"name: result, lineno: 10, col_offset: 0",int,Assign,"value: (Call), lineno: 10, col_offset: 0"
Call,"lineno: 10, col_offset: 9",int,Assign,"value: (Call), lineno: 10, col_offset: 0"
Name,"name: add, lineno: 10, col_offset: 9",add,Call,"lineno: 10, col_offset: 9"
Const,"name: int, value: 5, lineno: 10, col_offset: 13",int,Call,"lineno: 10, col_offset: 9"
Const,"name: int, value: 3, lineno: 10, col_offset: 16",int,Call,"lineno: 10, col_offset: 9"
Expr,"value: (Call), lineno: 11, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
Call,"lineno: 11, col_offset: 0",InferenceError,Expr,"value: (Call), lineno: 11, col_offset: 0"
Name,"name: print, lineno: 11, col_offset: 0",print,Call,"lineno: 11, col_offset: 0"
Name,"name: result, lineno: 11, col_offset: 6",int,Call,"lineno: 11, col_offset: 0"
If,"lineno: 13, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
Const,"name: bool, value: True, lineno: 13, col_offset: 3",bool,If,"lineno: 13, col_offset: 0"
Assign,"value: 1, lineno: 14, col_offset: 4",InferenceError,If,"lineno: 13, col_offset: 0"
AssignName,"name: a, lineno: 14, col_offset: 4",int,Assign,"value: 1, lineno: 14, col_offset: 4"
Const,"name: int, value: 1, lineno: 14, col_offset: 8",int,Assign,"value: 1, lineno: 14, col_offset: 4"
Assign,"value: 2, lineno: 15, col_offset: 4",InferenceError,If,"lineno: 13, col_offset: 0"
AssignName,"name: b, lineno: 15, col_offset: 4",int,Assign,"value: 2, lineno: 15, col_offset: 4"
Const,"name: int, value: 2, lineno: 15, col_offset: 8",int,Assign,"value: 2, lineno: 15, col_offset: 4"
Assign,"value: (BinOp), lineno: 16, col_offset: 4",InferenceError,If,"lineno: 13, col_offset: 0"
AssignName,"name: c, lineno: 16, col_offset: 4",int,Assign,"value: (BinOp), lineno: 16, col_offset: 4"
BinOp,"op: +, lineno: 16, col_offset: 8",int,Assign,"value: (BinOp), lineno: 16, col_offset: 4"
Name,"name: a, lineno: 16, col_offset: 8",int,BinOp,"op: +, lineno: 16, col_offset: 8"
Name,"name: b, lineno: 16, col_offset: 12",int,BinOp,"op: +, lineno: 16, col_offset: 8"
Expr,"value: (Call), lineno: 17, col_offset: 4",InferenceError,If,"lineno: 13, col_offset: 0"
Call,"lineno: 17, col_offset: 4",InferenceError,Expr,"value: (Call), lineno: 17, col_offset: 4"
Name,"name: print, lineno: 17, col_offset: 4",print,Call,"lineno: 17, col_offset: 4"
Name,"name: c, lineno: 17, col_offset: 10",int,Call,"lineno: 17, col_offset: 4"
Assign,"value: (List), lineno: 19, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
AssignName,"name: numbers, lineno: 19, col_offset: 0",list,Assign,"value: (List), lineno: 19, col_offset: 0"
List,"name: list, lineno: 19, col_offset: 10",list,Assign,"value: (List), lineno: 19, col_offset: 0"
Const,"name: int, value: 1, lineno: 19, col_offset: 11",int,List,"name: list, lineno: 19, col_offset: 10"
Const,"name: int, value: 2, lineno: 19, col_offset: 14",int,List,"name: list, lineno: 19, col_offset: 10"
Const,"name: int, value: 3, lineno: 19, col_offset: 17",int,List,"name: list, lineno: 19, col_offset: 10"
Const,"name: int, value: 4, lineno: 19, col_offset: 20",int,List,"name: list, lineno: 19, col_offset: 10"
Assign,"value: (ListComp), lineno: 20, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
AssignName,"name: results, lineno: 20, col_offset: 0",Unknown,Assign,"value: (ListComp), lineno: 20, col_offset: 0"
ListComp,"lineno: 20, col_offset: 10",InferenceError,Assign,"value: (ListComp), lineno: 20, col_offset: 0"
BinOp,"op: /, lineno: 20, col_offset: 11","float, float, float, float",ListComp,"lineno: 20, col_offset: 10"
Const,"name: int, value: 10, lineno: 20, col_offset: 11",int,BinOp,"op: /, lineno: 20, col_offset: 11"
Name,"name: n, lineno: 20, col_offset: 16","int, int, int, int",BinOp,"op: /, lineno: 20, col_offset: 11"
Comprehension,"lineno: None, col_offset: None",InferenceError,ListComp,"lineno: 20, col_offset: 10"
AssignName,"name: n, lineno: 20, col_offset: 22","int, int, int, int",Comprehension,"lineno: None, col_offset: None"
Name,"name: numbers, lineno: 20, col_offset: 27",list,Comprehension,"lineno: None, col_offset: None"
Expr,"value: (Call), lineno: 21, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
Call,"lineno: 21, col_offset: 0",InferenceError,Expr,"value: (Call), lineno: 21, col_offset: 0"
Name,"name: print, lineno: 21, col_offset: 0",print,Call,"lineno: 21, col_offset: 0"
Name,"name: results, lineno: 21, col_offset: 6",Unknown,Call,"lineno: 21, col_offset: 0"
FunctionDef,"name: defined_function, lineno: 23, col_offset: 0",defined_function,Module,"name: code-3, lineno: 0, col_offset: 0"
Arguments,"lineno: None, col_offset: None",InferenceError,FunctionDef,"name: defined_function, lineno: 23, col_offset: 0"
Assign,"value: 5, lineno: 24, col_offset: 2",InferenceError,FunctionDef,"name: defined_function, lineno: 23, col_offset: 0"
AssignName,"name: local_var, lineno: 24, col_offset: 2",int,Assign,"value: 5, lineno: 24, col_offset: 2"
Const,"name: int, value: 5, lineno: 24, col_offset: 14",int,Assign,"value: 5, lineno: 24, col_offset: 2"
Expr,"value: (Call), lineno: 25, col_offset: 2",InferenceError,FunctionDef,"name: defined_function, lineno: 23, col_offset: 0"
Call,"lineno: 25, col_offset: 2",InferenceError,Expr,"value: (Call), lineno: 25, col_offset: 2"
Name,"name: print, lineno: 25, col_offset: 2",print,Call,"lineno: 25, col_offset: 2"
Name,"name: local_var, lineno: 25, col_offset: 8",int,Call,"lineno: 25, col_offset: 2"
Expr,"value: (Call), lineno: 27, col_offset: 0",InferenceError,Module,"name: code-3, lineno: 0, col_offset: 0"
Call,"lineno: 27, col_offset: 0",NoneType,Expr,"value: (Call), lineno: 27, col_offset: 0"
Name,"name: defined_function, lineno: 27, col_offset: 0",defined_function,Call,"lineno: 27, col_offset: 0"
